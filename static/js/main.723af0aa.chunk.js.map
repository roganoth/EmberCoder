{"version":3,"sources":["components/CharacterCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","App.js","index.js"],"names":["CharacterCard","props","className","onClick","characterClicked","id","alt","name","src","image","Wrapper","children","Title","Score","message","score","topScore","App","state","characters","charactersChosen","includes","setState","push","length","i","j","Math","floor","random","this","map","character","key","Component","ReactDOM","render","document","getElementById"],"mappings":"u2DAgBeA,MAbf,SAAuBC,GACrB,OACE,yBAAKC,UAAU,QACb,yBACEA,UAAU,gBACVC,QAAS,kBAAMF,EAAMG,iBAAiBH,EAAMI,MAE5C,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,MCH1BC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCG1BC,MAJf,SAAeX,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMU,W,OCSvBE,MAXf,SAAeZ,GACb,OACE,6BACE,4BAAKA,EAAMa,SACX,sCACUb,EAAMc,MADhB,iBACqCd,EAAMe,YCgElCC,E,2MA/DbC,MAAQ,CACNC,aACAJ,MAAO,EACPC,SAAU,GACVI,iBAAkB,GAClBN,QAAS,kB,EAGXV,iBAAmB,SAAAC,GACjB,IAAIe,EAAmB,EAAKF,MAAME,iBAClC,GAAIA,EAAiBC,SAAShB,GAC5B,EAAKiB,SAAS,CACZF,iBAAkB,GAClBL,MAAO,EACPD,QAAS,+BAOb,GAHEM,EAAiBG,KAAKlB,GAGQ,KAA5Be,EAAiBI,OAArB,CASA,EAAKF,SAAS,CACZP,MAAOK,EAAiBI,OACxBV,QAAS,yBAGX,IAAK,IAAIW,EAAIN,EAAWK,OAAS,EAAGC,EAAI,EAAGA,IAAK,CAC9C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADM,EAEb,CAACN,EAAWO,GAAIP,EAAWM,IAA3DN,EAAWM,GAFkC,KAE9BN,EAAWO,GAFmB,WAb9C,EAAKJ,SAAS,CACZP,MAAO,GACPD,QAAS,gCACTM,iBAAkB,M,wEAgBd,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,oBACA,kBAAC,EAAD,CACEL,MAAOe,KAAKZ,MAAMH,MAClBC,SAAUc,KAAKZ,MAAMF,SACrBF,QAASgB,KAAKZ,MAAMJ,UAErBgB,KAAKZ,MAAMC,WAAWY,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACE5B,iBAAkB,EAAKA,iBACvBC,GAAI2B,EAAU3B,GACd4B,IAAKD,EAAU3B,GACfI,MAAOuB,EAAUvB,gB,GAxDXyB,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.723af0aa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n  return (\n    <div className=\"card\">\n      <div\n        className=\"img-container\"\n        onClick={() => props.characterClicked(props.id)}\n      >\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <div>\r\n      <h2>{props.message}</h2>\r\n      <h2>\r\n        Score: {props.score} | Top Score: {props.topScore}\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport characters from \"./character.json\";\nimport Score from \"./components/Score\";\n\nclass App extends Component {\n  state = {\n    characters,\n    score: 0,\n    topScore: 10,\n    charactersChosen: [],\n    message: \"Click to Play!\"\n  };\n\n  characterClicked = id => {\n    let charactersChosen = this.state.charactersChosen;\n    if (charactersChosen.includes(id)) {\n      this.setState({\n        charactersChosen: [],\n        score: 0,\n        message: \"You Lost! Play Again!\"\n      });\n      return;\n    } else {\n      charactersChosen.push(id);\n    }\n\n    if (charactersChosen.length === 10) {\n      this.setState({\n        score: 10,\n        message: \"You Win! Click to Play again!\",\n        charactersChosen: []\n      });\n      return;\n    }\n\n    this.setState({\n      score: charactersChosen.length,\n      message: \"You got another one!\"\n    });\n\n    for (let i = characters.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [characters[i], characters[j]] = [characters[j], characters[i]];\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n        <Score\n          score={this.state.score}\n          topScore={this.state.topScore}\n          message={this.state.message}\n        />\n        {this.state.characters.map(character => (\n          <CharacterCard\n            characterClicked={this.characterClicked}\n            id={character.id}\n            key={character.id}\n            image={character.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}